package chapter7.topic3;

/**
 * @author donald
 * @date 2022/01/24
 *
 * 1332. 删除回文子序列
 *
 * 给你一个字符串 s，它仅由字母 'a' 和 'b' 组成。每一次删除操作都可以从 s 中删除一个回文 子序列。
 *
 * 返回删除给定字符串中所有字符（字符串为空）的最小删除次数。
 *
 * 「子序列」定义：如果一个字符串可以通过删除原字符串某些字符而不改变原字符顺序得到，那么这个字符串就是原字符串的一个子序列。
 *
 * 「回文」定义：如果一个字符串向后和向前读是一致的，那么这个字符串就是一个回文。
 *
 *  
 *
 * 示例 1：
 * 输入：s = "ababa"
 * 输出：1
 * 解释：字符串本身就是回文序列，只需要删除一次。
 *
 *
 * 示例 2：
 * 输入：s = "abb"
 * 输出：2
 * 解释："abb" -> "bb" -> "".
 * 先删除回文子序列 "a"，然后再删除 "bb"。
 *
 *
 * 示例 3：
 * 输入：s = "baabb"
 * 输出：2
 * 解释："baabb" -> "b" -> "".
 * 先删除回文子序列 "baab"，然后再删除 "b"。
 *
 * 题意： 求删除次数，使其不为回文串
 *
 * 思路：
 * 删除判断如下：
 *
 * - 如果该字符串本身为回文串，此时只需删除 1 次即可，删除次数为 1。
 * - 如果该字符串本身不是回文串，此时只需删除 2 次即可，
 *   比如可以先删除所有的 a，再删除所有的 n，删除次数为 2。
 */
public class LeetCode_1332 {

    // Time: O(n), Space: O(1), Faster: 100%
    public int removePalindromeSub(String s) {
        int n = s.length();
        for (int i = 0; i < n / 2; ++i) {
            if (s.charAt(i) != s.charAt(n - 1 - i)) {
                return 2;
            }
        }
        return 1;
    }
}
